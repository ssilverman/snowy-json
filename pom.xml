<?xml version="1.0" encoding="UTF-8"?>
<!--
   Snow, a JSON Schema validator
   Copyright (c) 2020  Shawn Silverman

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as published
   by the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.qindesign</groupId>
    <artifactId>snowy-json</artifactId>
    <version>0.16.0-SNAPSHOT</version>

    <name>Snow</name>
    <description>Full-featured JSON Schema validator</description>
    <url>https://github.com/ssilverman/snowy-json</url>
    <inceptionYear>2020</inceptionYear>

    <licenses>
        <license>
            <name>GNU Affero General Public License v3.0</name>
            <url>https://www.gnu.org/licenses/agpl-3.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Shawn Silverman</name>
            <email>shawn@pobox.com</email>
            <url>https://github.com/ssilverman</url>
        </developer>
    </developers>

    <!--
        See: https://central.sonatype.org/pages/ossrh-guide.html
          See: https://central.sonatype.org/pages/requirements.html
          See: https://central.sonatype.org/pages/apache-maven.html
        See: https://maven.apache.org/repository/guide-central-repository-upload.html
      -->
    <scm>
        <connection>scm:git:git@github.com:ssilverman/snowy-json.git</connection>
        <developerConnection>scm:git:git@github.com:ssilverman/snowy-json.git</developerConnection>
        <url>https://github.com/ssilverman/snowy-json</url>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <!-- With the Nexus plugin, the regular repository isn't needed -->
        <!--<repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>-->
    </distributionManagement>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Versions all in one place so we can use the same ones for Javadocs -->
        <versions.gson>2.8.6</versions.gson>
    </properties>

    <build>
        <plugins>
            <!-- Deployment -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>false</autoReleaseAfterClose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- NOTE: compilerArgs is only passed when fork=true -->
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <!-- This plugin doesn't seem to be able to detect the API link itself -->
                    <detectJavaApiLink>false</detectJavaApiLink>
                    <links>
                        <link>https://docs.oracle.com/en/java/javase/${maven.compiler.source}/docs/api</link>
                        <link>https://www.javadoc.io/doc/com.google.code.gson/gson/${versions.gson}</link>
                    </links>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- For executing the project. There are three IDs:
                 1. main: Executes Main. Validates an instance against a schema.
                 2. test: Executes Test. Runs the test suite.
                 3. linter: Executes Linter. Checks a schema.
                 4. coverage: Executes Coverage. Scans instance and schema coverage.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>

                <executions>
                    <execution>
                        <id>main</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.qindesign.json.schema.Main</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.qindesign.json.schema.Test</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <id>linter</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.qindesign.json.schema.Linter</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <id>coverage</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.qindesign.json.schema.Coverage</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${versions.gson}</version>
        </dependency>
        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <version>4.8.90</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>68.1</version>
        </dependency>
    </dependencies>
</project>
